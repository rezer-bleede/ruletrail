version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ruletrail
      POSTGRES_PASSWORD: ruletrail
      POSTGRES_DB: ruletrail
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ruletrail']
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
    healthcheck:
      test: ['CMD-SHELL', 'curl -s http://localhost:9200 >/dev/null']
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    build: ./backend
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql+psycopg://ruletrail:ruletrail@postgres:5432/ruletrail
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_INDEX=ruletrail-demo
      - FEATURE_AI_ASSIST_ENABLED=false
      - STORAGE_PATH=/data
    volumes:
      - backend-storage:/data
      - ./seed:/seed:ro
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      es-seed:
        condition: service_completed_successfully

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - VITE_API_BASE=http://backend:8000
    depends_on:
      - backend
    ports:
      - '5173:5173'

  es-seed:
    build: ./backend
    command: python -m app.utils.seed_demo
    volumes:
      - ./seed:/data:ro
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - STORAGE_PATH=/data
    depends_on:
      elasticsearch:
        condition: service_healthy

volumes:
  postgres-data:
  es-data:
  backend-storage:
